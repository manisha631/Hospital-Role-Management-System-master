// <auto-generated />
using Hospital_Role_Management_System.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Hospital_Role_Management_System.Migrations
{
    [DbContext(typeof(HSMdbContext))]
    [Migration("20200725052520_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Hospital_Role_Management_System.Models.AdminLogin", b =>
                {
                    b.Property<string>("UserPassword")
                        .HasColumnType("varchar(45)")
                        .HasMaxLength(45)
                        .IsUnicode(false);

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("varchar(35)")
                        .HasMaxLength(35)
                        .IsUnicode(false);

                    b.Property<string>("UserType")
                        .IsRequired()
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.HasKey("UserPassword")
                        .HasName("PK_Admin");

                    b.ToTable("AdminLogin");
                });

            modelBuilder.Entity("Hospital_Role_Management_System.Models.Doctor", b =>
                {
                    b.Property<string>("DoctorId")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("Address")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(45)")
                        .HasMaxLength(45)
                        .IsUnicode(false);

                    b.Property<string>("PatientId")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("DoctorId");

                    b.HasIndex("PatientId");

                    b.ToTable("Doctor");
                });

            modelBuilder.Entity("Hospital_Role_Management_System.Models.Patient", b =>
                {
                    b.Property<string>("PatientId")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Disease")
                        .IsRequired()
                        .HasColumnType("varchar(45)")
                        .HasMaxLength(45)
                        .IsUnicode(false);

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(45)")
                        .HasMaxLength(45)
                        .IsUnicode(false);

                    b.HasKey("PatientId");

                    b.ToTable("Patient");
                });

            modelBuilder.Entity("Hospital_Role_Management_System.Models.Room", b =>
                {
                    b.Property<string>("RoomId")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("PatientId")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("RoomFloorNo")
                        .HasColumnType("int");

                    b.Property<string>("RoomStatus")
                        .IsRequired()
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.HasKey("RoomId");

                    b.HasIndex("PatientId");

                    b.ToTable("Room");
                });

            modelBuilder.Entity("Hospital_Role_Management_System.Models.Doctor", b =>
                {
                    b.HasOne("Hospital_Role_Management_System.Models.Patient", "Patient")
                        .WithMany("Doctor")
                        .HasForeignKey("PatientId")
                        .HasConstraintName("FK_Doctor_Patient")
                        .IsRequired();
                });

            modelBuilder.Entity("Hospital_Role_Management_System.Models.Room", b =>
                {
                    b.HasOne("Hospital_Role_Management_System.Models.Patient", "Patient")
                        .WithMany("Room")
                        .HasForeignKey("PatientId")
                        .HasConstraintName("FK_Room_Patient")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
